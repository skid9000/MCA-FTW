(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[43],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js":
/*!************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js ***!
  \************************************************************************/
/*! exports provided: conf, language */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nvar language = {\n    tokenPostfix: '.rust',\n    defaultToken: 'invalid',\n    keywords: [\n        'as', 'box', 'break', 'const', 'continue', 'crate', 'else', 'enum',\n        'extern', 'false', 'fn', 'for', 'if', 'impl', 'in', 'let', 'loop',\n        'match', 'mod', 'move', 'mut', 'pub', 'ref', 'return', 'self',\n        'static', 'struct', 'super', 'trait', 'true', 'type', 'unsafe', 'use',\n        'where', 'while', 'catch', 'default', 'union', 'static', 'abstract',\n        'alignof', 'become', 'do', 'final', 'macro', 'offsetof', 'override',\n        'priv', 'proc', 'pure', 'sizeof', 'typeof', 'unsized', 'virtual',\n        'yield',\n    ],\n    typeKeywords: [\n        'Self', 'm32', 'm64', 'm128', 'f80', 'f16', 'f128', 'int', 'uint',\n        'float', 'char', 'bool', 'u8', 'u16', 'u32', 'u64', 'f32', 'f64', 'i8',\n        'i16', 'i32', 'i64', 'str', 'Option', 'Either', 'c_float', 'c_double',\n        'c_void', 'FILE', 'fpos_t', 'DIR', 'dirent', 'c_char', 'c_schar',\n        'c_uchar', 'c_short', 'c_ushort', 'c_int', 'c_uint', 'c_long',\n        'c_ulong', 'size_t', 'ptrdiff_t', 'clock_t', 'time_t', 'c_longlong',\n        'c_ulonglong', 'intptr_t', 'uintptr_t', 'off_t', 'dev_t', 'ino_t',\n        'pid_t', 'mode_t', 'ssize_t',\n    ],\n    constants: [\n        'true', 'false', 'Some', 'None', 'Left', 'Right', 'Ok', 'Err',\n    ],\n    supportConstants: [\n        'EXIT_FAILURE', 'EXIT_SUCCESS', 'RAND_MAX', 'EOF', 'SEEK_SET',\n        'SEEK_CUR', 'SEEK_END', '_IOFBF', '_IONBF', '_IOLBF', 'BUFSIZ',\n        'FOPEN_MAX', 'FILENAME_MAX', 'L_tmpnam', 'TMP_MAX', 'O_RDONLY',\n        'O_WRONLY', 'O_RDWR', 'O_APPEND', 'O_CREAT', 'O_EXCL', 'O_TRUNC',\n        'S_IFIFO', 'S_IFCHR', 'S_IFBLK', 'S_IFDIR', 'S_IFREG', 'S_IFMT',\n        'S_IEXEC', 'S_IWRITE', 'S_IREAD', 'S_IRWXU', 'S_IXUSR', 'S_IWUSR',\n        'S_IRUSR', 'F_OK', 'R_OK', 'W_OK', 'X_OK', 'STDIN_FILENO',\n        'STDOUT_FILENO', 'STDERR_FILENO',\n    ],\n    supportMacros: [\n        'format!', 'print!', 'println!', 'panic!', 'format_args!', 'unreachable!',\n        'write!', 'writeln!'\n    ],\n    operators: [\n        '!', '!=', '%', '%=', '&', '&=', '&&', '*', '*=', '+', '+=', '-', '-=',\n        '->', '.', '..', '...', '/', '/=', ':', ';', '<<', '<<=', '<', '<=', '=',\n        '==', '=>', '>', '>=', '>>', '>>=', '@', '^', '^=', '|', '|=', '||', '_',\n        '?', '#'\n    ],\n    escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\n    delimiters: /[,]/,\n    symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\n    intSuffixes: /[iu](8|16|32|64|128|size)/,\n    floatSuffixes: /f(32|64)/,\n    tokenizer: {\n        root: [\n            [/[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\n                {\n                    cases: {\n                        '@typeKeywords': 'keyword.type',\n                        '@keywords': 'keyword',\n                        '@supportConstants': 'keyword',\n                        '@supportMacros': 'keyword',\n                        '@constants': 'keyword',\n                        '@default': 'identifier',\n                    }\n                }\n            ],\n            // Designator\n            [/\\$/, 'identifier'],\n            // Lifetime annotations\n            [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, 'identifier'],\n            // Byte literal\n            [/'\\S'/, 'string.byteliteral'],\n            // Strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\n            { include: '@numbers' },\n            // Whitespace + comments\n            { include: '@whitespace' },\n            [/@delimiters/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'delimiter'\n                    }\n                }],\n            [/[{}()\\[\\]<>]/, '@brackets'],\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [\"\\\\*/\", 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        numbers: [\n            //Octal\n            [/(0o[0-7_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Binary\n            [/(0b[0-1_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Exponent\n            [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: 'number' }],\n            //Float\n            [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: 'number' }],\n            //Hexadecimal\n            [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: 'number' }],\n            //Integer\n            [/[\\d][\\d_]*(@intSuffixes?)?/, { token: 'number' }],\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js\n");

/***/ })

}]);